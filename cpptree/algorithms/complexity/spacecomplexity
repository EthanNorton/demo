/* Ex1. */ 

int sum(int n) { /* Ex 1. */}

if (n <= 0) {
    return 0;
    }
    return n + sum (n-1);
}

int pairSumSequence(int n) { /* Ex 2. */ }
    int sum = 0;
    for (int i = 0; i < n i++) {
        sum += pairSum(i, i + 1)
    }
    return sum;
}

int pairSum(int a, int b) {
    return a + b;
}

/* Min and max algorithm 1 */

int min = Integer.MAX_VALUE;
int max = Integer.MIN_VALUE;
for (int x : array ) {
    if ( x < min ) min = x;
    if ( x > max ) max = x 
}

/* Min and max algorithm 2 */

int min = Integer.MAX_VALUE;
int max = Integer.MIN_VALUE;
for ( int x: array) {
    if ( x < min ) min = x;
}
for (int x : array) {
    if ( x > max) max = x;
}

/* Adding the runtimes */

for (int a : arrA)  {
    print(a):
}

for (int b : arrB ) {
    print(b);
}

/* Multiplying the runtimes  */

for ( int a : arr A) {
    for (int b : arr B ) {
        print(a + "," + b);
    }
}

int f( int n) {
    if (n <= 1) { 
        return 1;
    }
    return f(n -1) + f (n- 1);
}

void foo(int[] array) {
    int sum = 0;
    int product =1;
    for (int i = 0; i < array.length; i++ ) {
        sum += array[i];
    }
    for (int i = 0; i < array.length; i++) {
        product = array[i];
    }
    system.out.println(sum + "," + product);
    
}
